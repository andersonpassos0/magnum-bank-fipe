version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]
    networks: [appnet]
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc -w 2 127.0.0.1 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks: [appnet]
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8085:8080"]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks: [appnet]

  mysql:
    image: mysql:8.0
    container_name: mysql_fipe
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: fipe_db
      MYSQL_USER: fipe_user
      MYSQL_PASSWORD: fipe_pass
    ports: ["3306:3306"]
    volumes:
      - mysql_data:/var/lib/mysql
    networks: [appnet]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pfipe_pass"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  redis:
    image: redis:7.2
    container_name: redis_fipe
    ports: ["6379:6379"]
    networks: [appnet]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  api1:
    build:
      context: ./api1
    container_name: api1
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/fipe_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: fipe_user
      SPRING_DATASOURCE_PASSWORD: fipe_pass
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      APP_TOPICS_MARCAS: fipe.marcas
      APP_SECURITY_JWT_SECRET: trocar-por-secret-com-mais-de-32-characters
      APP_SECURITY_JWT_EXPIRATION: PT2H
      SERVER_PORT: 8080
    ports: ["8080:8080"]
    networks: [appnet]

  api2:
    build:
      context: ./api2
    container_name: api2
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/fipe_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: fipe_user
      SPRING_DATASOURCE_PASSWORD: fipe_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: api2-marcas
      APP_TOPICS_MARCAS: fipe.marcas
      SPRINGDOC_API_DOCS_ENABLED: "false"
      SPRINGDOC_SWAGGER_UI_ENABLED: "false"
      SERVER_PORT: 8081
    ports: ["8081:8081"]
    networks: [appnet]

volumes:
  mysql_data:

networks:
  appnet:
    driver: bridge